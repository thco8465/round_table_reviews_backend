"""new users columns added

Revision ID: 69012a429d56
Revises: 
Create Date: 2024-10-01 10:26:40.153528

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '69012a429d56'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('SequelizeMeta')
    op.drop_table('user')
    with op.batch_alter_table('Users', schema=None) as batch_op:
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('level',
               existing_type=postgresql.ENUM('Serf', 'Peasant', 'Apprentice', 'Squire', 'Journeyman', 'Yeoman', 'Footman', 'Knight', 'Master', 'Captain', 'Baron', 'Viscount', 'Earl', 'Duke', 'Grandmaster', 'Champion', 'Lord', 'Lady', 'King', 'Queen', 'Emperor', 'Empress', 'Sovereign', name='level_type'),
               type_=sa.String(),
               existing_nullable=True)

    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.drop_index('trgm_idx', postgresql_using='gin')

    with op.batch_alter_table('review_info', schema=None) as batch_op:
        batch_op.alter_column('high',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('low',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('atmosphere',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('story',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('dev_note',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
        batch_op.alter_column('gameplay',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('difficulty',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint('review_info_review_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'reviews', ['review_id'], ['id'])

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.alter_column('game_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('game_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('time_spent',
               existing_type=sa.NUMERIC(precision=5, scale=1),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.alter_column('rating',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.alter_column('date',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_DATE'))
        batch_op.drop_constraint('reviews_user_id_fkey', type_='foreignkey')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.create_foreign_key('reviews_user_id_fkey', 'Users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('date',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_DATE'))
        batch_op.alter_column('rating',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('time_spent',
               existing_type=sa.Integer(),
               type_=sa.NUMERIC(precision=5, scale=1),
               existing_nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('game_name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('game_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('review_info', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('review_info_review_id_fkey', 'reviews', ['review_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('difficulty',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('gameplay',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('dev_note',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('story',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('atmosphere',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('low',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
        batch_op.alter_column('high',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)

    with op.batch_alter_table('games', schema=None) as batch_op:
        batch_op.create_index('trgm_idx', ['name'], unique=False, postgresql_using='gin')

    with op.batch_alter_table('Users', schema=None) as batch_op:
        batch_op.alter_column('level',
               existing_type=sa.String(),
               type_=postgresql.ENUM('Serf', 'Peasant', 'Apprentice', 'Squire', 'Journeyman', 'Yeoman', 'Footman', 'Knight', 'Master', 'Captain', 'Baron', 'Viscount', 'Earl', 'Duke', 'Grandmaster', 'Champion', 'Lord', 'Lady', 'King', 'Queen', 'Emperor', 'Empress', 'Sovereign', name='level_type'),
               existing_nullable=True)
        batch_op.alter_column('username',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)

    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('username', name='user_username_key')
    )
    op.create_table('SequelizeMeta',
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('name', name='SequelizeMeta_pkey')
    )
    # ### end Alembic commands ###
